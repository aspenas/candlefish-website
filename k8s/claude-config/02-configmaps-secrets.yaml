---
apiVersion: v1
kind: ConfigMap
metadata:
  name: claude-config-env
  namespace: claude-config
  labels:
    app.kubernetes.io/name: claude-config
    app.kubernetes.io/component: configuration
data:
  # Backend Configuration
  CANDLEFISH_BACKEND_URL: "http://3.239.245.130:4000"
  CANDLEFISH_API_VERSION: "v1"
  
  # Service URLs (internal cluster communication)
  CONFIG_SERVICE_URL: "http://config-service:8080"
  GATEWAY_SERVICE_URL: "http://gateway-service:8080"
  SYNC_SERVICE_URL: "http://sync-service:8080"
  METRICS_SERVICE_URL: "http://metrics-service:8080"
  AUTH_SERVICE_URL: "http://auth-service:8080"
  
  # Application Settings
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  MAX_REQUEST_SIZE: "1mb"
  REQUEST_TIMEOUT: "30000"
  
  # AWS Configuration
  AWS_REGION: "us-east-1"
  AWS_DEFAULT_REGION: "us-east-1"
  
  # Feature Flags
  ENABLE_METRICS: "true"
  ENABLE_TRACING: "true"
  ENABLE_HEALTH_CHECKS: "true"
  ENABLE_AUTO_SYNC: "true"
  
  # Rate Limiting
  RATE_LIMIT_WINDOW_MS: "60000"
  RATE_LIMIT_MAX_REQUESTS: "100"
  
  # Caching
  CACHE_TTL_SECONDS: "300"
  CACHE_MAX_SIZE_MB: "5"

---
apiVersion: v1
kind: Secret
metadata:
  name: claude-config-secrets
  namespace: claude-config
  labels:
    app.kubernetes.io/name: claude-config
    app.kubernetes.io/component: secrets
type: Opaque
stringData:
  # JWT Configuration (shared with Candlefish backend)
  JWT_SECRET: "your-shared-jwt-secret-here"  # Replace with actual secret
  JWT_ISSUER: "candlefish-os"
  JWT_AUDIENCE: "claude-config"
  JWT_EXPIRY: "24h"
  
  # Database Connection (if needed)
  DATABASE_URL: "postgresql://user:pass@host:5432/claude_config"  # Replace with actual
  
  # Redis Connection (for caching/sessions)
  REDIS_URL: "redis://redis-service:6379"
  
  # API Keys
  INTERNAL_API_KEY: "internal-api-key-here"  # Replace with actual
  
  # AWS Credentials (if not using IAM roles)
  AWS_ACCESS_KEY_ID: ""  # Leave empty if using IAM roles
  AWS_SECRET_ACCESS_KEY: ""  # Leave empty if using IAM roles

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: claude-config-scripts
  namespace: claude-config
  labels:
    app.kubernetes.io/name: claude-config
    app.kubernetes.io/component: scripts
data:
  healthcheck.sh: |
    #!/bin/sh
    set -e
    
    # Basic health check script
    if [ -z "$HEALTH_PORT" ]; then
      HEALTH_PORT=8080
    fi
    
    # Check if service is responding
    curl -f http://localhost:${HEALTH_PORT}/health || exit 1
    
  startup.sh: |
    #!/bin/sh
    set -e
    
    echo "Starting Claude Config service..."
    
    # Wait for dependencies
    until curl -f ${CANDLEFISH_BACKEND_URL}/health 2>/dev/null; do
      echo "Waiting for Candlefish backend..."
      sleep 5
    done
    
    echo "Dependencies ready, starting application..."
    exec "$@"