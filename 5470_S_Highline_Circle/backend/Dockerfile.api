# Backend API Dockerfile for Highline Inventory System
FROM golang:1.21-alpine AS builder

# Install build dependencies
RUN apk add --no-cache gcc musl-dev sqlite-dev

WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build the application with CLOS configuration
RUN CGO_ENABLED=1 GOOS=linux go build -a -installsuffix cgo -o main .

# Production stage
FROM alpine:latest AS production

# Install runtime dependencies
RUN apk --no-cache add ca-certificates sqlite

WORKDIR /root/

# Copy the binary
COPY --from=builder /app/main .

# Copy configuration files
COPY --from=builder /app/.env.clos .env

# Create necessary directories
RUN mkdir -p /data /uploads /logs /backups

# Set environment variables for CLOS
ENV PORT=4050
ENV HOST=0.0.0.0
ENV DATABASE_PATH=/data/inventory.db
ENV UPLOAD_PATH=/uploads
ENV LOG_PATH=/logs
ENV BACKUP_PATH=/backups

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:4050/health || exit 1

# Expose CLOS assigned API port
EXPOSE 4050

# Run the binary
CMD ["./main"]