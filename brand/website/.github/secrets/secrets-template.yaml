# GitHub Repository Secrets Template
# Copy this file to help set up required secrets for the CI/CD pipeline

github_secrets:
  # AWS Configuration
  AWS_DEPLOY_ROLE_ARN: "arn:aws:iam::ACCOUNT_ID:role/github-actions-deploy-role"
  AWS_REGION: "us-east-1"
  
  # Slack Notifications
  SLACK_WEBHOOK_URL: "https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK"
  SLACK_SECURITY_WEBHOOK_URL: "https://hooks.slack.com/services/YOUR/SECURITY/WEBHOOK"
  
  # Netlify Configuration
  NETLIFY_AUTH_TOKEN: "your-netlify-auth-token"
  NETLIFY_PREVIEW_SITE_ID: "your-preview-site-id"
  NETLIFY_CUSTOM_DOMAIN_TOKEN: "your-custom-domain-token"
  
  # Security Scanning
  SNYK_TOKEN: "your-snyk-token"
  
  # Monitoring & Alerting
  DATADOG_API_KEY: "your-datadog-api-key"
  DATADOG_API_URL: "https://api.datadoghq.com"
  
  # On-call Information
  ONCALL_ENGINEER_CONTACT: "oncall@candlefish.ai"

github_environment_secrets:
  # Production Environment
  production:
    DATABASE_URL: "postgresql://user:pass@host:5432/candlefish_production"
    REDIS_URL: "redis://prod-redis:6379"
    JWT_SECRET: "production-jwt-secret-key"
    API_KEYS: "production-api-keys-json"
    
  # Staging Environment  
  staging:
    DATABASE_URL: "postgresql://user:pass@host:5432/candlefish_staging"
    REDIS_URL: "redis://staging-redis:6379"
    JWT_SECRET: "staging-jwt-secret-key"
    API_KEYS: "staging-api-keys-json"

aws_secrets_manager:
  # Production secrets in AWS Secrets Manager
  production_secrets:
    secret_name: "production/candlefish-website/app-secrets"
    secrets:
      DATABASE_URL: "Production database connection string"
      REDIS_URL: "Production Redis connection string"
      JWT_SECRET: "Production JWT secret key"
      NEXTAUTH_SECRET: "NextAuth.js secret"
      NEXTAUTH_URL: "https://candlefish.ai"
      STRIPE_SECRET_KEY: "Production Stripe secret key"
      SENDGRID_API_KEY: "SendGrid API key for emails"
      SENTRY_DSN: "Sentry DSN for error tracking"
      OPENAI_API_KEY: "OpenAI API key"
      ANTHROPIC_API_KEY: "Anthropic Claude API key"
      
  # Staging secrets in AWS Secrets Manager
  staging_secrets:
    secret_name: "staging/candlefish-website/app-secrets"
    secrets:
      DATABASE_URL: "Staging database connection string"
      REDIS_URL: "Staging Redis connection string"
      JWT_SECRET: "Staging JWT secret key"
      NEXTAUTH_SECRET: "NextAuth.js secret"
      NEXTAUTH_URL: "https://staging.candlefish.ai"
      STRIPE_SECRET_KEY: "Stripe test key"
      SENDGRID_API_KEY: "SendGrid API key for emails"
      SENTRY_DSN: "Sentry DSN for error tracking"
      OPENAI_API_KEY: "OpenAI API key"
      ANTHROPIC_API_KEY: "Anthropic Claude API key"

kubernetes_secrets:
  # Production namespace secrets
  production:
    - name: app-secrets
      type: Opaque
      data:
        database-url: "base64-encoded-database-url"
        redis-url: "base64-encoded-redis-url"
        jwt-secret: "base64-encoded-jwt-secret"
    
    - name: image-pull-secret
      type: kubernetes.io/dockerconfigjson
      data:
        .dockerconfigjson: "base64-encoded-docker-config"
        
    - name: tls-cert
      type: kubernetes.io/tls
      data:
        tls.crt: "base64-encoded-certificate"
        tls.key: "base64-encoded-private-key"

  # Staging namespace secrets  
  staging:
    - name: app-secrets
      type: Opaque
      data:
        database-url: "base64-encoded-staging-database-url"
        redis-url: "base64-encoded-staging-redis-url"
        jwt-secret: "base64-encoded-staging-jwt-secret"

setup_instructions:
  github_secrets:
    - "Go to GitHub repository Settings > Secrets and variables > Actions"
    - "Add each secret from the github_secrets section above"
    - "For environment-specific secrets, create environments first"
    - "Add environment secrets under Settings > Environments > [environment]"
    
  aws_secrets_manager:
    - "Use AWS CLI or Console to create secrets in Secrets Manager"
    - "Ensure the GitHub Actions role has permissions to read these secrets"
    - "Use secretsmanager:GetSecretValue permission"
    - "Example CLI command:"
    - "aws secretsmanager create-secret --name 'production/candlefish-website/app-secrets' --secret-string '{\"DATABASE_URL\":\"...\"}'"
    
  kubernetes_secrets:
    - "Apply secrets to each namespace using kubectl"
    - "Example: kubectl create secret generic app-secrets --from-literal=database-url=... -n production"
    - "Or use sealed-secrets/external-secrets-operator for GitOps"
    
security_notes:
  - "Never commit actual secret values to Git"
  - "Use different secrets for each environment"
  - "Rotate secrets regularly"
  - "Use least-privilege access for service accounts"
  - "Monitor secret access logs"
  - "Consider using external secret management solutions"
  
secret_rotation:
  schedule: "Quarterly or when compromised"
  process:
    - "Generate new secret values"
    - "Update AWS Secrets Manager"
    - "Update GitHub secrets"
    - "Update Kubernetes secrets"
    - "Restart applications to pick up new secrets"
    - "Verify applications are working"
    - "Revoke old secrets"