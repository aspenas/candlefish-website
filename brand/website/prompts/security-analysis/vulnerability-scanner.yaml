# Security Vulnerability Scanner Prompt Template
id: security-vulnerability-scanner
name: Security Vulnerability Scanner
version: 1.0.0
description: Identify security vulnerabilities and provide remediation
category: security-analysis
modelCompatibility:
  - anthropic
  - openai
tags:
  - security
  - vulnerabilities
  - OWASP
  - remediation

systemPrompt: |
  You are a senior security engineer with expertise in application security, OWASP Top 10,
  and secure coding practices. You identify vulnerabilities with precision and provide
  actionable remediation guidance with code examples.

template: |
  ## Security Analysis Request
  
  Perform a comprehensive security analysis of the following code.
  
  ### Context
  **Application Type:** {{applicationType}}
  **Environment:** {{environment}}
  **Language/Framework:** {{language}} / {{framework}}
  **Authentication Method:** {{authMethod}}
  
  ### Code to Analyze
  ```{{language}}
  {{code}}
  ```
  
  {{#if configuration}}
  ### Configuration
  ```yaml
  {{configuration}}
  ```
  {{/if}}
  
  {{#if dependencies}}
  ### Dependencies
  ```json
  {{dependencies}}
  ```
  {{/if}}
  
  ### Security Analysis Scope
  
  1. **OWASP Top 10 (2021)**
     - A01: Broken Access Control
     - A02: Cryptographic Failures
     - A03: Injection
     - A04: Insecure Design
     - A05: Security Misconfiguration
     - A06: Vulnerable Components
     - A07: Authentication Failures
     - A08: Data Integrity Failures
     - A09: Logging Failures
     - A10: SSRF
  
  2. **Additional Security Checks**
     - Input validation and sanitization
     - Output encoding
     - Session management
     - Error handling and information disclosure
     - Resource management
     - Race conditions
     - Business logic flaws
  
  3. **Compliance Requirements**
     {{#each complianceStandards}}
     - {{this}}
     {{/each}}
  
  ### Output Format
  
  ```yaml
  securityReport:
    summary:
      riskLevel: [Critical|High|Medium|Low]
      vulnerabilitiesFound: <count>
      immediateActionRequired: <boolean>
      estimatedRemediationTime: <hours>
    
    criticalFindings:
      - id: <vuln-id>
        type: <OWASP category or CWE>
        severity: Critical
        location:
          file: <file>
          line: <line-number>
          function: <function-name>
        description: <detailed description>
        impact: <potential impact>
        exploitability: <ease of exploitation>
        remediation:
          immediate: <quick fix>
          proper: <best practice solution>
          code: |
            <code example>
        references:
          - <link to OWASP/CWE>
          - <additional resources>
    
    highFindings:
      <similar structure>
    
    mediumFindings:
      <similar structure>
    
    lowFindings:
      <similar structure>
    
    secureCodePatterns:
      - description: <what was done well>
        location: <where>
    
    recommendations:
      immediate:
        - <action item>
      shortTerm:
        - <action item>
      longTerm:
        - <action item>
    
    securityScore:
      overall: <0-100>
      breakdown:
        inputValidation: <0-100>
        authentication: <0-100>
        authorization: <0-100>
        dataProtection: <0-100>
        errorHandling: <0-100>
        logging: <0-100>
  ```
  
  ### Additional Requirements
  - Provide CVE references where applicable
  - Include proof-of-concept exploit code only for critical issues
  - Suggest security testing approaches
  - Recommend security tools and libraries
  - Consider performance impact of security measures

variables:
  - name: applicationType
    type: string
    required: true
    description: Type of application (web, api, mobile, desktop)
    validation:
      enum: [web, api, mobile, desktop, microservice, serverless]
  
  - name: environment
    type: string
    required: true
    description: Deployment environment
    validation:
      enum: [development, staging, production]
  
  - name: language
    type: string
    required: true
    description: Programming language
  
  - name: framework
    type: string
    required: false
    description: Framework being used
  
  - name: authMethod
    type: string
    required: false
    description: Authentication method used
    validation:
      enum: [jwt, oauth, session, api-key, basic, certificate, none]
  
  - name: code
    type: string
    required: true
    description: Source code to analyze
  
  - name: configuration
    type: string
    required: false
    description: Configuration files content
  
  - name: dependencies
    type: string
    required: false
    description: Package dependencies (package.json, requirements.txt, etc.)
  
  - name: complianceStandards
    type: array
    required: false
    default: []
    description: Compliance standards to check (PCI-DSS, HIPAA, GDPR, etc.)

maxTokens: 8000
temperature: 0.2
topP: 0.95

metadata:
  author: Candlefish AI
  team: Security
  approvalStatus: approved
  costEstimate: 0.12
  averageLatency: 4000