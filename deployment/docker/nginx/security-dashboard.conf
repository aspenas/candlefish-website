# Security Dashboard Server Configuration
# Optimized for React SPA with API proxying

server {
    listen 8080 default_server;
    listen [::]:8080 default_server;
    
    # Server identification
    server_name security-dashboard.candlefish.ai _;
    
    # Document root
    root /usr/share/nginx/html;
    index index.html;
    
    # Security settings
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Content Security Policy for Security Dashboard
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' ws: wss: https://api.security.candlefish.ai https://staging-api.security.candlefish.ai; frame-ancestors 'none'; base-uri 'self'; form-action 'self';" always;
    
    # Rate limiting
    limit_req zone=assets burst=20 nodelay;
    limit_conn conn_limit_per_ip 20;
    
    # Security headers snippet
    include /etc/nginx/snippets/security-headers.conf;
    
    # Gzip compression
    include /etc/nginx/snippets/gzip.conf;
    
    # Static assets caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary "Accept-Encoding";
        
        # Security headers for assets
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options DENY always;
        
        # CORS for fonts and assets
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin '*';
            add_header Access-Control-Allow-Methods 'GET, OPTIONS';
            add_header Access-Control-Allow-Headers 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type 'text/plain; charset=utf-8';
            add_header Content-Length 0;
            return 204;
        }
        
        try_files $uri =404;
    }
    
    # API proxy to backend
    location /api/ {
        limit_req zone=api burst=10 nodelay;
        
        proxy_pass $API_URL;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffering
        proxy_buffering off;
        proxy_request_buffering off;
        
        # Cache API responses briefly
        proxy_cache_valid 200 1m;
        proxy_cache_valid 404 10m;
        
        # Security headers for API
        proxy_hide_header X-Powered-By;
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options DENY always;
    }
    
    # GraphQL endpoint proxy
    location /graphql {
        limit_req zone=api burst=20 nodelay;
        
        proxy_pass $API_URL;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket support for GraphQL subscriptions
        proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
        proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
        proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;
        
        # Timeouts for GraphQL
        proxy_connect_timeout 5s;
        proxy_send_timeout 300s;  # Longer timeout for complex queries
        proxy_read_timeout 300s;
        
        # No caching for GraphQL
        proxy_buffering off;
        proxy_request_buffering off;
        proxy_cache off;
        
        # Security headers
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options DENY always;
    }
    
    # Health check endpoint
    location /health {
        access_log off;
        return 200 '{"status":"ok","timestamp":"$time_iso8601","server":"$hostname"}';
        add_header Content-Type application/json;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }
    
    # Security.txt for responsible disclosure
    location /.well-known/security.txt {
        return 200 "Contact: security@candlefish.ai\nPreferred-Languages: en\nCanonical: https://security-dashboard.candlefish.ai/.well-known/security.txt\nPolicy: https://candlefish.ai/security-policy\nHiring: https://candlefish.ai/careers\n";
        add_header Content-Type text/plain;
    }
    
    # Robots.txt
    location /robots.txt {
        return 200 "User-agent: *\nDisallow: /api/\nDisallow: /graphql\nDisallow: /admin/\nSitemap: https://security-dashboard.candlefish.ai/sitemap.xml\n";
        add_header Content-Type text/plain;
    }
    
    # Block access to sensitive files
    location ~ /\.(htaccess|htpasswd|env|git) {
        deny all;
        return 404;
    }
    
    # Block access to backup and config files
    location ~ \.(bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)$ {
        deny all;
        return 404;
    }
    
    # React SPA routing - serve index.html for all non-API routes
    location / {
        try_files $uri $uri/ /index.html;
        
        # Cache control for HTML files
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        
        # Security headers for HTML
        add_header X-Content-Type-Options nosniff always;
        add_header X-Frame-Options DENY always;
        add_header X-XSS-Protection "1; mode=block" always;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# HTTPS server configuration (if SSL is enabled)
server {
    listen 8443 ssl http2;
    listen [::]:8443 ssl http2;
    
    server_name security-dashboard.candlefish.ai;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;
    
    # SSL security settings
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozTLS:10m;
    ssl_session_tickets off;
    
    # HSTS (31536000 seconds = 1 year)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Same configuration as HTTP server
    root /usr/share/nginx/html;
    index index.html;
    
    # Include all the same location blocks as HTTP server
    include /etc/nginx/snippets/security-headers.conf;
    include /etc/nginx/snippets/gzip.conf;
    
    # Static assets (same as HTTP)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        try_files $uri =404;
    }
    
    # API and GraphQL proxies (same as HTTP)
    location /api/ {
        limit_req zone=api burst=10 nodelay;
        proxy_pass $API_URL;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    location /graphql {
        limit_req zone=api burst=20 nodelay;
        proxy_pass $API_URL;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Health check
    location /health {
        access_log off;
        return 200 '{"status":"ok","ssl":true,"timestamp":"$time_iso8601","server":"$hostname"}';
        add_header Content-Type application/json;
    }
    
    # React SPA routing
    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }
}