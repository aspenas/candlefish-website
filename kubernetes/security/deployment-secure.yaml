---
# Secure Deployment for Claude Configuration System
apiVersion: apps/v1
kind: Deployment
metadata:
  name: claude-config-api
  namespace: claude-config
  labels:
    app: claude-config
    component: api
    version: v1.0.0
spec:
  replicas: 3
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: claude-config
      component: api
  template:
    metadata:
      labels:
        app: claude-config
        component: api
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: claude-config-sa
      
      # Security Context for Pod
      securityContext:
        runAsNonRoot: true
        runAsUser: 10001
        runAsGroup: 10001
        fsGroup: 10001
        seccompProfile:
          type: RuntimeDefault
      
      # Init container for migration
      initContainers:
        - name: migration
          image: claude-config-api:latest
          imagePullPolicy: Always
          command: ["/app/migrate"]
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: claude-config-secrets
                  key: database-url
          securityContext:
            runAsNonRoot: true
            runAsUser: 10001
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          resources:
            limits:
              memory: "256Mi"
              cpu: "200m"
            requests:
              memory: "128Mi"
              cpu: "100m"
      
      containers:
        - name: api
          image: claude-config-api:latest
          imagePullPolicy: Always
          
          # Security Context for Container
          securityContext:
            runAsNonRoot: true
            runAsUser: 10001
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
          
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 9090
              name: metrics
              protocol: TCP
          
          # Environment Variables
          env:
            - name: PORT
              value: "8080"
            - name: ENVIRONMENT
              value: "production"
            - name: LOG_LEVEL
              value: "info"
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: claude-config-secrets
                  key: database-url
            - name: REDIS_URL
              valueFrom:
                secretKeyRef:
                  name: claude-config-secrets
                  key: redis-url
            - name: JWT_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: claude-config-secrets
                  key: jwt-private-key
            - name: JWT_PUBLIC_KEY
              valueFrom:
                secretKeyRef:
                  name: claude-config-secrets
                  key: jwt-public-key
            - name: AWS_REGION
              value: "us-east-1"
            - name: AWS_WEB_IDENTITY_TOKEN_FILE
              value: "/var/run/secrets/eks.amazonaws.com/serviceaccount/token"
            - name: AWS_ROLE_ARN
              valueFrom:
                configMapKeyRef:
                  name: claude-config-config
                  key: aws-role-arn
          
          # Volume Mounts
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: cache
              mountPath: /app/cache
            - name: tls-certs
              mountPath: /etc/ssl/certs
              readOnly: true
          
          # Probes
          livenessProbe:
            httpGet:
              path: /health/live
              port: http
              scheme: HTTPS
              httpHeaders:
                - name: X-Health-Check
                  value: liveness
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          
          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
              scheme: HTTPS
              httpHeaders:
                - name: X-Health-Check
                  value: readiness
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2
          
          startupProbe:
            httpGet:
              path: /health/startup
              port: http
              scheme: HTTPS
            initialDelaySeconds: 0
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 30
          
          # Resource Limits
          resources:
            limits:
              memory: "1Gi"
              cpu: "1000m"
              ephemeral-storage: "2Gi"
            requests:
              memory: "512Mi"
              cpu: "500m"
              ephemeral-storage: "1Gi"
      
      # Volumes
      volumes:
        - name: tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: cache
          emptyDir:
            sizeLimit: 2Gi
        - name: tls-certs
          secret:
            secretName: claude-config-tls
            defaultMode: 0400
      
      # Node Selection
      nodeSelector:
        kubernetes.io/os: linux
        node.kubernetes.io/instance-type: t3.medium
      
      # Affinity Rules
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app
                      operator: In
                      values:
                        - claude-config
                topologyKey: kubernetes.io/hostname
      
      # Tolerations
      tolerations:
        - key: "node.kubernetes.io/not-ready"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 300
        - key: "node.kubernetes.io/unreachable"
          operator: "Exists"
          effect: "NoExecute"
          tolerationSeconds: 300
      
      # Pod Disruption Budget
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      restartPolicy: Always

---
# Service Account
apiVersion: v1
kind: ServiceAccount
metadata:
  name: claude-config-sa
  namespace: claude-config
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/claude-config-role

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: claude-config-api
  namespace: claude-config
  labels:
    app: claude-config
    component: api
spec:
  type: ClusterIP
  selector:
    app: claude-config
    component: api
  ports:
    - name: http
      port: 80
      targetPort: 8080
      protocol: TCP
    - name: metrics
      port: 9090
      targetPort: 9090
      protocol: TCP

---
# HorizontalPodAutoscaler
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: claude-config-api-hpa
  namespace: claude-config
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: claude-config-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Percent
          value: 100
          periodSeconds: 60
        - type: Pods
          value: 2
          periodSeconds: 60

---
# PodDisruptionBudget
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: claude-config-api-pdb
  namespace: claude-config
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: claude-config
      component: api